{"version":3,"sources":["components/AddCategory.js","components/GifItem.js","helpers/getGifs.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","console","log","trim","length","cats","type","value","onChange","target","placeholder","GifItem","title","url","className","src","alt","getGifs","category","a","encodeURI","fetch","resp","json","data","gifs","map","img","id","images","downsized_medium","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","defaultCategories","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACZC,mBAAS,IADG,mBACzCC,EADyC,KAC7BC,EAD6B,KAkBhD,OACE,0BAAMC,SAZa,SAACC,GACpBA,EAAEC,iBAEFC,QAAQC,IAAI,eAAgBN,GAExBA,EAAWO,OAAOC,OAAS,IAC7BV,GAAc,SAACW,GAAD,OAAWT,GAAX,mBAA0BS,OACxCR,EAAc,OAMd,2BAAID,GACJ,2BACEU,KAAK,OACLC,MAAOX,EACPY,SArBoB,SAACT,GACzBF,EAAcE,EAAEU,OAAOF,QAqBnBG,YAAY,uBCzBPC,EAAU,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC/B,OACE,yBAAKC,UAAU,0CACb,yBAAKA,UAAU,cAAcC,IAAKF,EAAKG,IAAKJ,IAC5C,2BAAIA,K,uBCPGK,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACfN,EADe,iDACiCO,UACpDF,GAFmB,+DAIFG,MAAMR,GAJJ,cAIfS,EAJe,gBAKEA,EAAKC,OALP,uBAKbC,EALa,EAKbA,KAEFC,EAAOD,EAAKE,KAAI,SAACC,GAAS,IAAD,EAC7B,MAAO,CACLC,GAAID,EAAIC,GACRhB,MAAOe,EAAIf,MACXC,IAAG,UAAEc,EAAIE,cAAN,aAAE,EAAYC,iBAAiBjB,QAXjB,kBAedY,GAfc,4CAAH,sDCKPM,EAAU,SAAC,GAAkB,IAAhBb,EAAe,EAAfA,SAAe,ECFb,SAACA,GAAc,IAAD,EACdvB,mBAAS,CACjC6B,KAAM,GACNQ,SAAS,IAH6B,mBACjCC,EADiC,KAC1BC,EAD0B,KAexC,OATAC,qBAAU,WACRlB,EAAQC,GAAUkB,MAAK,SAACC,GACtBH,EAAS,CACPV,KAAMa,EACNL,SAAS,SAGZ,CAACd,IAEGe,EDZ2BK,CAAapB,GAAjCW,EADyB,EAC/BL,KAAcQ,EADiB,EACjBA,QAEtB,OACE,oCACE,wBAAIlB,UAAU,iDACXI,GAGFc,GAAW,uBAAGlB,UAAU,oCAAb,WAEZ,yBAAKA,UAAU,aACZe,EAAOH,KAAI,SAACC,GAAD,OACV,kBAAC,EAAD,eAASY,IAAKZ,EAAIC,IAAQD,UEKrBa,EAnBM,SAAC,GAAuC,IAAD,IAApCC,yBAAoC,MAAhB,CAAC,SAAe,IAEtB9C,mBAAS8C,GAFa,mBAEnDC,EAFmD,KAEvChD,EAFuC,KAI1D,OACE,oCACE,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAEA,4BACGgD,EAAWhB,KAAI,SAACR,GAAD,OACd,kBAAC,EAAD,CAASqB,IAAKrB,EAAUA,SAAUA,U,MCV5CyB,IAASC,OAAO,kBAAC,EAAD,MAAkBC,SAASC,eAAe,U","file":"static/js/main.b35f7037.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) => {\r\n    setInputValue(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    console.log('handleSubmit', inputValue);\r\n\r\n    if (inputValue.trim().length > 2) {\r\n      setCategories((cats) => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <p>{inputValue}</p>\r\n      <input\r\n        type='text'\r\n        value={inputValue}\r\n        onChange={handleInputChange}\r\n        placeholder='Search any topic'\r\n      />\r\n    </form>\r\n  );\r\n};\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const GifItem = ({ title, url }) => {\r\n  return (\r\n    <div className='card animate__animated animate__fadeIn'>\r\n      <img className='card__image' src={url} alt={title} />\r\n      <p>{title}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nGifItem.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  url: PropTypes.string.isRequired,\r\n};\r\n","export const getGifs = async (category) => {\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(\r\n    category\r\n  )}&limit=10&api_key=GTQb5NHPnxlNdiFOQ7g0IfnVvr332miB`;\r\n  const resp = await fetch(url);\r\n  const { data } = await resp.json();\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url,\r\n    };\r\n  });\r\n\r\n  return gifs;\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { GifItem } from './GifItem';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const { data: images, loading } = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className='topic__name animate__animated animate__fadeIn'>\r\n        {category}\r\n      </h3>\r\n\r\n      {loading && <p className='animate__animated animate__flash'>Loading</p>}\r\n\r\n      <div className='card-grid'>\r\n        {images.map((img) => (\r\n          <GifItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nGifGrid.propTypes = {\r\n  category: PropTypes.string.isRequired,\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(() => {\r\n    getGifs(category).then((imgs) => {\r\n      setState({\r\n        data: imgs,\r\n        loading: false,\r\n      });\r\n    });\r\n  }, [category]);\r\n\r\n  return state; // {data:[], loading: true };\r\n};\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ({ defaultCategories = ['Choir'] }) => {\r\n  // const [categories, setCategories] = useState(['Choir']);\r\n  const [categories, setCategories] = useState(defaultCategories);\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory setCategories={setCategories} />\r\n      <hr />\r\n\r\n      <ol>\r\n        {categories.map((category) => (\r\n          <GifGrid key={category} category={category} />\r\n        ))}\r\n      </ol>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default GifExpertApp;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(<GifExpertApp />, document.getElementById('root'));\n"],"sourceRoot":""}